name: Build Chaos APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # 0) Normalize Capacitor to v7 & install deps cleanly
      - name: Align Capacitor to v7 and install
        shell: bash
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const pkg = JSON.parse(fs.readFileSync('package.json','utf8'));
          const bump=(o)=>{ if(!o) return; for(const k of Object.keys(o)){ if(k.startsWith('@capacitor/')) o[k]='^7.0.0'; } };
          bump(pkg.dependencies); bump(pkg.devDependencies);
          fs.writeFileSync('package.json', JSON.stringify(pkg,null,2));
          NODE
          rm -f package-lock.json
          npm i --no-audit --no-fund

      # 1) Capacitor config + viewport
      - name: Write Capacitor config
        shell: bash
        run: |
          cat > capacitor.config.ts <<'EOF'
          import type { CapacitorConfig } from '@capacitor/cli';
          const config: CapacitorConfig = {
            appId: 'com.memorystreamer.app',
            appName: 'Memory Streamer',
            webDir: 'dist',
            server: { androidScheme: 'https' }
          };
          export default config;
          EOF

      - name: Ensure viewport meta
        shell: bash
        run: |
          FILE=""
          [ -f public/index.html ] && FILE=public/index.html
          [ -z "$FILE" ] && [ -f src/index.html ] && FILE=src/index.html
          if [ -n "$FILE" ]; then
            if ! grep -q 'name="viewport"' "$FILE"; then
              awk 'BEGIN{ins=0} /<head[^>]*>/ && !ins {print; print "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">"; ins=1; next} {print}' "$FILE" > "$FILE.tmp" && mv "$FILE.tmp" "$FILE"
            fi
          fi

      # 2) Remove default/preset images & obvious demo assets
      - name: Remove default preset images
        shell: bash
        run: |
          rm -rf public/presets public/images public/img public/assets/presets public/assets/sample || true
          find public -maxdepth 1 -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" \) -print -delete 2>/dev/null || true

      # 3) Your source file writes (useChaosTiming, util-hash, showTaggingGate, markov, verify, etc.)
      # ... [KEEP all your source write steps here exactly as before, unchanged] ...

      # 4) New minimal UI (wording updated; no default images)
      # ... [KEEP your index.css, main.tsx, SettingsAlwaysOn.tsx, App.tsx write steps exactly as before] ...

      # 5) Android project + native plugins; zoom fix; deep link
      - name: Add Android project
        run: npx cap add android || true

      - name: Write MainActivity.java
        run: |
          mkdir -p android/app/src/main/java/com/memorystreamer/app
          cat > android/app/src/main/java/com/memorystreamer/app/MainActivity.java <<'EOF'
          package com.memorystreamer.app;
          import android.os.Bundle;
          import android.webkit.WebSettings;
          import android.webkit.WebView;
          import com.getcapacitor.BridgeActivity;
          public class MainActivity extends BridgeActivity {
            @Override
            protected void onCreate(Bundle savedInstanceState) {
              super.onCreate(savedInstanceState);
              WebView wv = getBridge().getWebView();
              if (wv != null) {
                WebSettings s = wv.getSettings();
                s.setLoadWithOverviewMode(true);
                s.setUseWideViewPort(true);
                s.setBuiltInZoomControls(true);
                s.setDisplayZoomControls(false);
              }
            }
          }
          EOF

      # ... [KEEP your GallerySaverPlugin.java and SocialSharePlugin.java steps exactly as before] ...

      - name: Add deep link to manifest (if missing)
        shell: bash
        run: |
          MANIFEST=android/app/src/main/AndroidManifest.xml
          if ! grep -q 'ms50' "$MANIFEST"; then
            sed -i '/<activity android:name=".MainActivity"/a\
                <intent-filter android:autoVerify="true">\
                  <action android:name="android.intent.action.VIEW" />\
                  <category android:name="android.intent.category.DEFAULT" />\
                  <category android:name="android.intent.category.BROWSABLE" />\
                  <data android:scheme="ms50" android:host="auth" />\
                </intent-filter>' "$MANIFEST"
          fi

      # 6) Build web
      - name: Build web assets
        run: npm run build

      # 7) Java 21, ensure Android exists, sync, build
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Ensure Android platform is added
        run: |
          if [ ! -d android ]; then
            npx cap add android || true
          fi
          npx cap copy android

      - name: Sync Capacitor (plugins & native)
        run: npx cap sync android

      - name: Build debug APK
        run: cd android && ./gradlew assembleDebug

      - uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: android/app/build/outputs/apk/debug/*.apk
